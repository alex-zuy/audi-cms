{
    loginPage: {
        labels: {
            login: Login
        }
        actions: {
            login: Login
        }
        errors: {
            noSuchUser: There is no such user. Check your data!
        }
        inputs: {
            email: {
                label: Email
                placeholder: Enter email
            }
            password: {
                label: Password
                placeholder: Enter password
            }
        }
    }
    managersCtl: {
        list: {
            labels: {
                deleting: {
                 manager: Deleting manager
                 admin: Deleting admin
                 confirm: Are you sure you want to delete this manager ?
                 unacceptable: Admin cannot be deleted! Revoke privileges first
                }
                table: {
                    fullName: Full name
                    email: Email
                    password: Password
                    isAdmin: Admin
                }
            }
            actions: {
                changePassword: Change
                add: Add manager
                delete: {
                    cancel: Cancel
                    confirm: Delete
                }
            }
        }
        store: {
            labels: {
                title: Creating new  manager
            }
            actions: {
                store: Save
            }
            inputs: {
                fullName: {
                    label: Full name
                    placeholder: Manager full name
                }
                email: {
                    label: Email
                    placeholder: Email used to login
                }
                password: {
                    label: Password
                    placeholder: Enter password
                }
                confirmPassword: {
                    label: Confirm password
                    placeholder: Repeat password
                }
            }
            errors: {
                passwordsNotEqual: Passwords don`t match
                submitError: An error appeared while submitting manager store
            }
        }
        update: {
            labels: {
                title: Updating manager
            }
            actions: {
                update: Save
            }
            inputs: {
                fullName: {
                    label: Full name
                    placeholder: Enter new full name
                }
                email: {
                    label: Email
                    placeholder: Enter new email
                }
            }
        }
        changePassword: {
            labels: {
                title: Changing password
            }
            actions: {
                store: Save
            }
            errors: {
                passwordsNotEqual: Passwords don`t match
                submitError: An error appeared while submitting password change
            }
            inputs: {
                password: {
                    label: New password
                    placeholder: Enter password
                }
                confirmPassword: {
                    label: Confirm password
                    placeholder: Enter password second time
                }
            }
        }
    }
    navbar: {
        labels: {
            main: Main
            newsAndOffers: NewsAndOffers
            models: Models
            service: Service
            services: {
                one: One
                two: Two
                three: Three
                four: Four
            }
        }
    }
    validators: {
        errors: {
            string: {
                length: String must not be longer than {maxLength} characters
                noWhitespace: String must not contain whitespace characters
                lowCase: String must be in low case
                email: String must be valid email address
                phoneNumber: String must be correct phone number
            }
            numeric: {
                nonNegative: Value must non be negative
                min: Value must not be lower than {minValue}
                max: Value must not be greater than {maxValue}
                inRange: Value must be in range {minValue} - {maxValue}
            }
            value: {
                unique: Record with such value already exists
            }
        }
    }
}
